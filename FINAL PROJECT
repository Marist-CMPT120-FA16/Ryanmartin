<!DOCTYPE html>
<html>
	<head>
		<!-- Ryan Martin -->
		
		<meta charset="utf-8">
		<title>Hunger Quest</title>
		</head>
		<body style="background-color:pink;">
		<h1 style="font-family: verdana; text-align:center; color:orange"> Hunger Quest</h1>
		
		<h5 style= "font-family:timesnewroman; color:blue"><a href="mailto:ryan.martin3@marist.edu">Link if there are any questions or problems:</a></h5>
			 <script type="text/javascript" src="location.js"></script>
       <script type="text/javascript">
			 
         // Global Variables     
         var currentLoc = 0;
         var score = 0;
         var navigationErrorCount = 0;
         var sarcasmThreshold = 5;

         var cornTaken = false;
         var waterTaken = false;
         var pizzaTaken = false;
         
         var hasVisitedLoc0 = false;
         var hasVisitedLoc1 = false;
         var hasVisitedLoc2 = false;
         var hasVisitedLoc3 = false;
         var hasVisitedLoc4 = false;
         var hasVisitedLoc5 = false;
         var hasVisitedLoc6 = false;
         var hasVisitedLoc7 = false;
         var hasVisitedLoc7 = false;
         var hasVisitedLoc8 = false;
         var hasVisitedLoc9 = false;         

         function Location(id,name,description,item){
          this.id=id;
          this.name=name;
          this.description=description;
          this.item=item;
          this.toString=function() {return "id:" + this.id + " location: " + this.name;};
         }

         var start_loc = new Location(0,'start', start(), ' ');
         var street_loc = new Location(1,'street', street(), ' ');
         var dirtroad_loc = new Location(2, 'dirtroad', dirtroad(), ' ');
         var shortcut_loc = new Location(3, 'shortcut', shortcut(), ' ');
         var pizzaparlor_loc = new Location(4, 'pizzaparlor', pizzaparlor(), ' ');
         var outsidepizzaparlor_loc = new Location(5, 'outsidepizzaparlor', outsidepizzaparlor(),' ');
         var tunnel_loc = new Location(6, 'tunnel', tunnel(),' ');
         var bridge_loc = new Location(7, 'bridge', bridge(),' ');
         var cornfield_loc = new Location(8, 'cornfield', cornfield(),' ');
         var river_loc = new Location(9, 'river', river(),' ');
         var ending = new Location(10, 'ending', ending(), ' ');

         var locations = [start_loc, street_loc, dirtroad_loc, shortcut_loc, pizzaparlor_loc, outsidepizzaparlor_loc, tunnel_loc, bridge_loc, cornfield_loc, river_loc, ending]
         
         function Item(id,name,description){
          this.id=id;
          this.name=name;
          this.description=description;
          this.toString=function() {return "id:" + this.id + " item: " + this.name;};
         }

         var corn = new Item(0,'corn', 'Cornstalk');
         var pizza = new Item(1,'pizza', 'Pizzaslice');
         var water = new Item(2, 'water', 'Freshwater');

         var items = [];

// Initialization
         function init() {
            look();
         }

         var gameBoard = [[-1,-1,street_loc, -1], //Start
         				  [-1,dirtroad_loc,-1,start_loc], //Street
         				  [street_loc,-1,-1,shortcut_loc], //Dirtroad
         				  [pizzaparlor_loc,-1,dirtroad_loc,-1], //Shortcut
         				  [outsidepizzaparlor_loc, shortcut_loc, -1, -1], //Pizzaparlor
         				  [-1,pizzaparlor_loc,-1,tunnel_loc], //Outside Pizza
         				  [-1,bridge_loc,outsidepizzaparlor_loc,-1], //Tunnel
         				  [tunnel_loc,cornfield_loc,-1,-1], //Bridge
         				  [bridge_loc,-1,-1,river_loc], //Cornfield
         				  [ending,-1,cornfield_loc,-1]]; //River

         function move(direction){
         	var moveNum = -1;
         	if(direction == 'n'){
         		moveNum = 0;
         	}else if(direction == 's'){
         		moveNum = 1;
         	}else if(direction == 'e'){
         		moveNum = 2;
         	}else if(direction == 'w'){
         		moveNum = 3;
         	}

         	var location = gameBoard[currentLoc][moveNum];

         	if(location.id == 10 && moveNum == 0){
         		if(items.length < 3){
         			displayMessage("You must collect all items before you enter");
         		}else{
         			currentLoc = location.id;
         			document.getElementById("northBtn").disabled = true;
         			document.getElementById("southBtn").disabled = true;
         			document.getElementById("eastBtn").disabled = true;
         			document.getElementById("westBtn").disabled = true;
         			look();
         		}
         	}else if(location == -1){
         		navigationError();
         	}else{
         		currentLoc = location.id;
         		var gameBoardRow = gameBoard[currentLoc];
         		if(gameBoardRow[0] != -1){
         			document.getElementById("northBtn").disabled = false;
         		}else{
         			document.getElementById("northBtn").disabled = true;
         		}

         		if(gameBoardRow[1] != -1){
         			document.getElementById("southBtn").disabled = false;
         		}else{
         			document.getElementById("southBtn").disabled = true;
         		}

         		if(gameBoardRow[2] != -1){
         			document.getElementById("eastBtn").disabled = false;
         		}else{
         			document.getElementById("eastBtn").disabled = true;
         		}

         		if(gameBoardRow[3] != -1){
         			document.getElementById("westBtn").disabled = false;
         		}else{
         			document.getElementById("westBtn").disabled = true;
         		}
         	}
         }
         
         // Directional Buttons
         function btnNorth_click() {
         	move('n');
         	look();
         }

         function btnSouth_click() {
         	move('s');
         	look();
          }
         
         function btnEast_click() {
         	move('e');
         	look();    
          }
         
         function btnWest_click() {
         	move('w');
         	look();
          }
              
         // Story / Locale Functions
         function look() {
            var desc = "";
            message = locations[currentLoc].description;
            checkScore();
            desc = desc + "\n" + "Score: " + score ;
            displayMessage(message);
            displayMessage(desc);
         }
    function appendItem(input){
        var list = document.getElementById("itemList");
        var entry = document.createElement('li');
        entry.appendChild(document.createTextNode(input));
        list.appendChild(entry);
      }
      function take(input){
        if(currentLoc == 4 && input.toLowerCase() == 'pizza' && pizzaTaken == false){
          appendItem(pizza.name);
          pizzaTaken = true;
          items.push(pizza);
        }else if(currentLoc == 8 && input.toLowerCase() == 'corn' && cornTaken == false){
          appendItem(corn.name);
          cornTaken = true;
          items.push(corn);
        }else if(currentLoc == 9 && input.toLowerCase() == 'fresh water' && waterTaken == false){
          appendItem(water.name);
          waterTaken = true;
          items.push(water);
        }else{
          displayMessage("Item does not exist");
        }
      }
         
         function navigationError() {
            navigationErrorCount = navigationErrorCount + 1;
            if (navigationErrorCount < sarcasmThreshold) {
               displayMessage("Wrong Way!");
            } else {
               displayMessage("You starved!");
               document.getElementById("westBtn").disabled = true;
               document.getElementById("northBtn").disabled = true;
               document.getElementById("eastBtn").disabled = true;
               document.getElementById("southBtn").disabled = true;
            }            
         }

         function checkScore() {
            if (! hasVisitedLoc0) {            
               if (currentLoc === 0) {
                  score = score + 5;
                  hasVisitedLoc0 = true;
               }
            } else if ( (! hasVisitedLoc1) && (currentLoc === 1) ) {            
                  score = score + 5;
                  hasVisitedLoc1 = true;
            } else if ( (! hasVisitedLoc2) && (currentLoc === 2) ) {            
                  score = score + 5;
                  hasVisitedLoc2 = true;
            } else if ( (! hasVisitedLoc3) && (currentLoc === 3) ) {            
                  score = score + 5;
                  hasVisitedLoc3 = true;
            } else if ( (! hasVisitedLoc4) && (currentLoc === 4) ) {            
                  score = score + 5;
                  hasVisitedLoc4 = true;
            } else if ( (! hasVisitedLoc5) && (currentLoc === 5) ) {            
                  score = score + 5;
                  hasVisitedLoc5 = true;
            } else if ( (! hasVisitedLoc6) && (currentLoc === 6) ) {            
                  score = score + 5;
                  hasVisitedLoc6 = true;   
            } else if ( (! hasVisitedLoc7) && (currentLoc === 7) ) {
                 
                  score = score + 5;
                  hasVisitedLoc7 = true;
            } else if ( (! hasVisitedLoc8) && (currentLoc === 8) ) {
                 
                  score = score + 5;
                  hasVisitedLoc8 = true;
            } else if ( (! hasVisitedLoc9) && (currentLoc === 9) ) { score = score + 5;
            	hasVisitedLoc9 = true;            
            }            
         }

         // Utility Functions
         function displayMessage(msg) {
            var target = document.getElementById("taMain");
            target.value = msg + "\n\n" + target.value;
         }

         function help(){
          displayMessage("N, S, W, E are your commands to direct yourself. Remember to take the items you find.");
         }
         function btnGo_click(){
         	var input = document.getElementById('txtCommand').value;
         	if(input == 'n' || input == 'N'){
         		btnNorth_click(); // Runs North command 
         	}else if(input == 's' || input == 'S'){
         		btnSouth_click(); // Runs South command
         	}else if(input == 'e' || input == 'E'){
         		btnEast_click(); // Runs East command	
         	}else if(input == 'w' || input == 'W'){
         		btnWest_click(); // Runs West command
     		  }else if(input.toLowerCase() == "help"){
            help();
          }else if(input.substring(0,4).toLowerCase() == "take"){
            take(input.substring(5,input.length));
          }else{
            displayMessage("Invalid command.");
          }
 		}				
      
      </script>
   </head>
   <body onload="init();">
       <textarea id="taMain" rows="10" cols="30"></textarea>            
 
       
       <br>
       <input type="button" 
              value="North"
              onclick="btnNorth_click();"
              id="northBtn">
       <input type="button" 
              value="South"
              onclick="btnSouth_click();"
              id="southBtn">
       <input type="button" 
              value="East"
              onclick="btnEast_click();"
              id="eastBtn">
       <input type="button" 
              value="West"
              onclick="btnWest_click();"
              id="westBtn">
              
       <br>
       Command:
       <input type="text"
       		  id = "txtCommand"
       		  name="txtCommand">
       		  
       <input type="button"
       		  value= "Go"
       		  onclick="btnGo_click();" />		

       <br>
   <h2>Items:</h2>  
   <ol id="itemList">
   </ol>
   <img src="ruout.png">
   </body>
</html>
